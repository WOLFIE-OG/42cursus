name: Makefile CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    env:
      VALGRIND_CMD: valgrind --leak-check=full --track-fds=yes --trace-children=yes --track-origins=yes --suppressions=rl.supp

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@main

    - name: Get submodules
      run: git submodule update --init --recursive
    
    - name: Update apt
      run: sudo apt-get update --fix-missing
    
    - name: Install tree, gcc, make, xorg, libxext-dev, libbsd-dev, valgrind, lolcat, neofetch & figlet
      run: sudo apt-get install tree gcc make xorg libxext-dev libbsd-dev valgrind lolcat neofetch figlet

    - name: Install norminette
      run: pip install norminette

    - name: ==========] Run ft_printf [==========
      run: figlet -f figlet-fonts/3d.flf Running ft_printf

    - name: Run tree
      run: tree
      working-directory: ft_printf

    - name: Run norminette
      run: norminette src include
      working-directory: ft_printf

    - name: Make ft_printf as a module
      run: make module
      working-directory: ft_printf

    - name: View contents of obj
      run: ls -la obj/
      working-directory: ft_printf

    - name: Clean output
      run: make clean
      working-directory: ft_printf

    - name: Make ft_printf as standalone
      run: make all
      working-directory: ft_printf

    - name: Re-make ft_printf
      run: make re
      working-directory: ft_printf

    - name: View contents of standalone
      run: nm -C build/libftprintf.a
      working-directory: ft_printf
    
    - name: ==========] Run get_next_line [==========
      run: figlet -f figlet-fonts/3d.flf Running get_next_line

    - name: Run tree
      run: tree
      working-directory: get_next_line

    - name: Run norminette
      run: norminette src include
      working-directory: get_next_line

    - name: Make get_next_line as a module
      run: make module
      working-directory: get_next_line

    - name: View contents of obj
      run: ls -la obj/
      working-directory: get_next_line

    - name: Clean output
      run: make clean
      working-directory: get_next_line

    - name: Make get_next_line as standalone
      run: make all
      working-directory: get_next_line

    - name: Re-make get_next_line
      run: make re
      working-directory: get_next_line

    - name: View contents of standalone
      run: nm -C build/libftgnl.a
      working-directory: get_next_line
    
    - name: ==========] Run libft [==========
      run: figlet -f figlet-fonts/3d.flf Running libft

    - name: Run tree
      run: tree
      working-directory: libft

    - name: Run norminette
      run: norminette src include
      working-directory: libft

    - name: Make libft
      run: make
      working-directory: libft

    - name: Re-make libft
      run: make re
      working-directory: libft

    - name: View contents of libft
      run: nm -C build/libft.a
      working-directory: libft
    
    - name: Run tests
      run: make test
      working-directory: libft

    - name: ==========] Run born2beroot [==========
      run: figlet -f figlet-fonts/3d.flf Running born2beroot
    
    - name: Run monitor script echo version
      run: bash monitoring-echo.sh
      working-directory: born2beroot

    - name: ==========] Run minitalk [==========
      run: figlet -f figlet-fonts/3d.flf Running minitalk

    - name: Run tree
      run: tree
      working-directory: minitalk

    - name: Run norminette
      run: norminette src include libft/src libft/include
      working-directory: minitalk

    - name: Make minitalk server & client
      run: make
      working-directory: minitalk

    - name: Re-make minitalk server & client
      run: make re
      working-directory: minitalk

    - name: View contents of libft
      run: nm -C libft/build/libft.a
      working-directory: minitalk

    - name: View contents of client
      run: nm -C client
      working-directory: minitalk
    
    - name: View contents of server
      run: nm -C server
      working-directory: minitalk

    - name: ==========] Run so_long [==========
      run: figlet -f figlet-fonts/3d.flf Running so_long

    - name: Run tree
      run: tree
      working-directory: so_long

    - name: Run norminette
      run: norminette src include libs/libft/src libs/libft/include
      working-directory: so_long

    - name: Make so_long
      run: make
      working-directory: so_long

    - name: Re-make so_long
      run: make re
      working-directory: so_long

    - name: View contents of libft
      run: nm -C libs/libft/build/libft.a
      working-directory: so_long

    - name: View contents of minilibx
      run: nm -C libs/minilibx/libmlx_Linux.a
      working-directory: so_long
    
    - name: View contents of so_long
      run: nm -C so_long
      working-directory: so_long

    - name: ==========] Run push_swap [==========
      run: figlet -f figlet-fonts/3d.flf Running push_swap
    
    - name: Run tree
      run: tree
      working-directory: push_swap

    - name: Run norminette
      run: norminette src include libft/src libft/include
      working-directory: push_swap

    - name: Make push_swap
      run: make
      working-directory: push_swap

    - name: Re-make push_swap
      run: make re
      working-directory: push_swap

    - name: View contents of libft
      run: nm -C libft/build/libft.a
      working-directory: push_swap
    
    - name: View contents of push_swap
      run: nm -C push_swap
      working-directory: push_swap
    
    - name: Test - 10 (No Arg)
      run: ./tests/test_10.sh
      working-directory: push_swap

    - name: Test - 10
      run: ./tests/test_10_1_arg.sh
      working-directory: push_swap

    - name: Test - 50 (No Arg)
      run: ./tests/test_50.sh
      working-directory: push_swap

    - name: Test - 50
      run: ./tests/test_50_1_arg.sh
      working-directory: push_swap

    - name: Test - 100 (No Arg)
      run: ./tests/test_100.sh
      working-directory: push_swap

    - name: Test - 100
      run: ./tests/test_100_1_arg.sh
      working-directory: push_swap

    - name: Re-Make push_swap with debug
      run: make re CFLAGS+=-DDEBUG_PRINT=1
      working-directory: push_swap

    - name: Test - 10 (No Arg)
      run: ./tests/test_10.sh
      working-directory: push_swap

    - name: Test - 10
      run: ./tests/test_10_1_arg.sh
      working-directory: push_swap

    - name: Test - 50 (No Arg)
      run: ./tests/test_50.sh
      working-directory: push_swap

    - name: Test - 50
      run: ./tests/test_50_1_arg.sh
      working-directory: push_swap

    - name: Test - 100 (No Arg)
      run: ./tests/test_100.sh
      working-directory: push_swap

    - name: Test - 100
      run: ./tests/test_100_1_arg.sh
      working-directory: push_swap

    - name: ==========] Run philosophers [==========
      run: figlet -f figlet-fonts/3d.flf Running philosophers
    
    - name: Run tree
      run: tree
      working-directory: Philosophers

    - name: Run norminette
      run: norminette philo philo_bonus
      working-directory: Philosophers
  
    - name: Make philosophers
      run: make PRETTY=false
      working-directory: Philosophers

    - name: Re-make philosophers
      run: make re PRETTY=false
      working-directory: Philosophers
    
    - name: View contents of philosophers
      run: nm -C philo/philo
      working-directory: Philosophers
    
    - name: View contents of philosophers bonus
      run: nm -C philo_bonus/philo_bonus
      working-directory: Philosophers
    
    - name: Run standard
      run: ./philo/philo 5 800 200 200 23
      working-directory: Philosophers
    
    - name: Run standard and check eat count of 1
      run: ./philo/philo 5 800 200 200 23 | grep "1 is eating" | wc -l
      working-directory: Philosophers
    
    - name: Run standard and check eat count of 2
      run: ./philo/philo 5 800 200 200 23 | grep "2 is eating" | wc -l
      working-directory: Philosophers

    - name: Run standard and check eat count of 3
      run: ./philo/philo 5 800 200 200 23 | grep "3 is eating" | wc -l
      working-directory: Philosophers

    - name: Run standard and check eat count of 4
      run: ./philo/philo 5 800 200 200 23 | grep "4 is eating" | wc -l
      working-directory: Philosophers

    - name: Run standard and check eat count of 5
      run: ./philo/philo 5 800 200 200 23 | grep "5 is eating" | wc -l
      working-directory: Philosophers

    - name: Run standard and check eat count of all
      run: ./philo/philo 5 800 200 200 23 | grep "is eating"| wc -l
      working-directory: Philosophers

    - name: Run standard with valgrind
      run: valgrind -s ./philo/philo 5 800 200 200 23
      working-directory: Philosophers
    
    - name: Run standard with valgrind with one die
      run: valgrind -s ./philo/philo 5 80 200 200 23
      working-directory: Philosophers
    
    - name: Run standard with valgrind with one
      run: valgrind -s ./philo/philo 1 800 200 200 23
      working-directory: Philosophers

    - name: Run standard with helgrind 
      run: valgrind --tool=helgrind -s ./philo/philo 10 800 200 200 23
      working-directory: Philosophers

    - name: Run standard with helgrind with one die
      run: valgrind --tool=helgrind -s ./philo/philo 1 80 200 200 23
      working-directory: Philosophers

    - name: Run standard with helgrind with one
      run: valgrind --tool=helgrind -s ./philo/philo 1 800 200 200 23
      working-directory: Philosophers

    - name: Run bonus
      run: ./philo_bonus/philo_bonus 5 800 200 200 23
      working-directory: Philosophers
    
    - name: Run bonus and check eat count of 1
      run: ./philo_bonus/philo_bonus 5 800 200 200 23 | grep "1 is eating" | wc -l
      working-directory: Philosophers

    - name: Run bonus and check eat count of 2
      run: ./philo_bonus/philo_bonus 5 800 200 200 23 | grep "2 is eating" | wc -l
      working-directory: Philosophers

    - name: Run bonus and check eat count of 3
      run: ./philo_bonus/philo_bonus 5 800 200 200 23 | grep "3 is eating" | wc -l
      working-directory: Philosophers

    - name: Run bonus and check eat count of 4
      run: ./philo_bonus/philo_bonus 5 800 200 200 23 | grep "4 is eating" | wc -l
      working-directory: Philosophers

    - name: Run bonus and check eat count of 5
      run: ./philo_bonus/philo_bonus 5 800 200 200 23 | grep "5 is eating" | wc -l
      working-directory: Philosophers

    - name: Run bonus and check eat count of all
      run: ./philo_bonus/philo_bonus 5 800 200 200 23 | grep "is eating"| wc -l
      working-directory: Philosophers

    - name: Run bonus with valgrind
      run: valgrind -s ./philo_bonus/philo_bonus 5 800 200 200 23
      working-directory: Philosophers

    - name: Run bonus with valgrind with one die
      run: valgrind -s ./philo_bonus/philo_bonus 5 80 200 200 23
      working-directory: Philosophers
    
    - name: Run bonus with valgrind with one
      run: valgrind -s ./philo_bonus/philo_bonus 1 800 200 200 23
      working-directory: Philosophers

    - name: Run bonus with helgrind
      run: valgrind --tool=helgrind -s ./philo_bonus/philo_bonus 10 800 200 200 23
      working-directory: Philosophers
    
    - name: Run bonus with helgrind with one die
      run: valgrind --tool=helgrind -s ./philo_bonus/philo_bonus 1 80 200 200 23
      working-directory: Philosophers

    - name: Run bonus with helgrind with one
      run: valgrind --tool=helgrind -s ./philo_bonus/philo_bonus 1 800 200 200 23
      working-directory: Philosophers
    
    - name: Test standard
      run: cd LazyPhilosophersTesterGithubActions && ./test.sh ../philo/philo
      working-directory: Philosophers
    
    - name: Test bonus
      run: cd LazyPhilosophersTesterGithubActions && ./test.sh ../philo_bonus/philo_bonus
      working-directory: Philosophers

    - name: ==========] Run minishell [==========
      run: figlet -f figlet-fonts/3d.flf Running minishell

    - name: Run tree
      run: tree
      working-directory: minishell

    - name: Make minishell
      run: make
      working-directory: minishell

    - name: Re-make minishell
      run: make re
      working-directory: minishell

    - name: View contents of libft
      run: nm -C libft/build/libft.a
      working-directory: minishell

    - name: View contents of minishell
      run: nm -C minishell
      working-directory: minishell
    
    - name: Run non-interactive mode | test 1
      run: ./minishell -c 'ifconfig > file.txt' && ./minishell -c 'ifconfig | hexdump >> file.txt' && ./minishell -c 'echo $PATH >> file.txt' && ./minishell -c 'lolcat < file.txt' && ./minishell -c 'rm file.txt'
      working-directory: minishell

    - name: Run non-interactive mode with valgrind | test 1
      run: $VALGRIND_CMD ./minishell -c 'ifconfig > file.txt' && $VALGRIND_CMD ./minishell -c 'ifconfig | hexdump >> file.txt' && $VALGRIND_CMD ./minishell -c 'echo $PATH >> file.txt' && $VALGRIND_CMD ./minishell -c 'lolcat < file.txt' && $VALGRIND_CMD ./minishell -c 'rm file.txt'
      working-directory: minishell
  
    - name: Run non-interactive mode | test 2
      run: ./minishell -c '> file.txt ifconfig' && ./minishell -c '>> file.txt neofetch' && ./minishell -c 'cat < file.txt | hexdump' && ./minishell -c '< file.txt cat'
      working-directory: minishell
    
    - name: Run non-interactive mode with valgrind | test 2
      run: $VALGRIND_CMD ./minishell -c '> file.txt ifconfig' && $VALGRIND_CMD ./minishell -c '>> file.txt neofetch' && $VALGRIND_CMD ./minishell -c 'cat < file.txt | hexdump' && $VALGRIND_CMD ./minishell -c '< file.txt cat'
      working-directory: minishell
    
    - name: Run non-interactive mode | test 3 diff | minishell
      run: ./minishell -c 'cat /etc/os-release > minishell.txt' && ./minishell -c 'uname | hexdump >> minishell.txt' && ./minishell -c 'echo $PATH >> minishell.txt'
      working-directory: minishell
    
    - name: Run non-interactive mode | test 3 diff | bash
      run: bash -c 'cat /etc/os-release > bash.txt' && bash -c 'uname | hexdump >> bash.txt' && bash -c 'echo $PATH >> bash.txt'
      working-directory: minishell
    
    - name: Run non-interactive mode | test 3 diff | diff
      run: diff minishell.txt bash.txt -y -s
      working-directory: minishell
    
    - name: Compile segfault program
      run: gcc intentional_segfault.c -o segfault.bin
      working-directory: minishell

    - name: Run non-interactive mode | test 4 segfault program | minishell
      run: ./minishell -c './segfault.bin'
      working-directory: minishell
      continue-on-error: true
    
    - name: Run non-interactive mode | test 4 segfault program | bash
      run: bash -c './segfault.bin'
      working-directory: minishell
      continue-on-error: true

    - name: Run non-interactive mode with valgrind | test 4 segfault program | minishell
      run: $VALGRIND_CMD ./minishell -c './segfault.bin'
      working-directory: minishell
      continue-on-error: true
    
    - name: Run mpanic tester
      run: touch .timmer && bash mpanic.sh
      working-directory: minishell/mpanic
